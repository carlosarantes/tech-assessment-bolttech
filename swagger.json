{
    "openapi" : "3.0.0",
    "info" : {
        "title" : "iProject Tasks",   
        "description" : "Api designed to manage projects and tasks with their users",
        "version" : "1.0",
        "contact" : {
            "name" : "Carlos Augusto Arantes",
            "email" : "carlosaugusto.a@outlook.com"
        }
    },
    "paths" : {
        "/health" : {
            "get" : {
                "tags" : [
                    "Health"
                ],
                "summary" : "Health check.",
                "description" : "Health check.",
                "operationId" : "health",
                "responses" : {
                    "200" : {
                        "description": "Health check"
                    }
                }
            }
        },






        "/users/registration" : {
            "post" : {
                "tags" : [
                    "Users"
                ],
                "summary" : "User registration.",
                "description" : "User registration.",
                "operationId" : "userRegistration",
                "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "$ref": "#/components/examples/UserRegistration"
                        }
                      }
                    }
                },
                "responses" : {
                    "201" : {
                        "description": "User registration was successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/examples/UserRegistrationOk"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "Something went wrong."
                    },
                    "409" : {
                        "description" : "E-mail provided already in use."
                    }
                }
            }
        },
        "/users/login" : {
            "post" : {
                "tags" : [
                    "Users"
                ],
                "summary" : "User login.",
                "description" : "User login.",
                "operationId" : "userLogin",
                "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "$ref": "#/components/examples/UserLogin"
                        }
                      }
                    }
                },
                "responses" : {
                    "201" : {
                        "description": "User authnticated",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/examples/UserRegistrationOk"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description" : "Something went wrong."
                    },
                    "401" : {
                        "description" : "Login failed, invalid credentials."
                    }
                }
            }
        },

















        "/users/:id/projects" : {
            "get" : {
                "tags" : [
                    "Users"
                ],
                "summary" : "Get User Projects",
                "description" : "Get all projects of a user from database.",
                "operationId" : "getUserProjects",
                "responses" : {
                    "200" : {
                        "description": "List of projects",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/projects" : {
            "get" : {
                "tags" : [
                    "Projects"
                ],
                "summary" : "Get All Projects",
                "description" : "Get all projects from database.",
                "operationId" : "getAllProjects",
                "responses" : {
                    "200" : {
                        "description": "List of projects",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Something went wrong"
                    }
                }
            },
            "post" : {
                "tags" : [
                    "Projects"
                ],
                "summary" : "Create new project",
                "description" : "Create new project.",
                "operationId" : "createNewProject",
                "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "$ref": "#/components/examples/ProjectPayload"
                        }
                      }
                    }
                },
                "responses" : {
                    "201" : {
                        "description": "Project created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/projects/{id}" : {
            "get" : {
                "tags" : [
                    "Projects"
                ],
                "summary" : "Get a project by id.",
                "description" : "Get a project by id.",
                "operationId" : "getProjectById",
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "Id of the project.",
                      "required": true
                    }
                ],
                "responses" : { 
                    "200" : {
                        "description" : "Project found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Something went wrong"
                    },
                    "404" : {
                        "description": "Project not found."
                    }
                }
            },
            "put" : {
                "tags" : [
                    "Projects"
                ],
                "summary" : "Update project.",
                "description" : "Update project.",
                "operationId" : "updateProject",
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "Id of the project.",
                      "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "$ref": "#/components/examples/ProjectPayload"
                        }
                      }
                    }
                },
                "responses" : { 
                    "204" : {
                        "description" : "Project updated"
                    },
                    "400" : {
                        "description": "Something went wrong"
                    },
                    "404" : {
                        "description": "Project not found."
                    }
                }
            },
            "delete" : {
                "tags" : [
                    "Projects"
                ],
                "summary" : "Delete a project by id.",
                "description" : "Delete a project by id.",
                "operationId" : "deleteProject",
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "Id of the project.",
                      "required": true
                    }
                ],
                "responses" : { 
                    "204" : {
                        "description" : "Project deleted"
                    },
                    "400" : {
                        "description": "Something went wrong"
                    },
                    "404" : {
                        "description": "Project not found."
                    }
                }
            }
        },
        "/projects/{id}/tasks" : {
            "get" : {
                "tags" : [
                    "Projects"
                ],
                "summary" : "Get tasks by project id.",
                "description" : "Get tasks by project id.",
                "operationId" : "projectTasks",
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "Id of the project.",
                      "required": true
                    }
                ],
                "responses" : { 
                    "200" : {
                        "description" : "Tasks found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/tasks" : {
            "get" : {
                "tags" : [
                    "Tasks"
                ],
                "summary" : "Get All Tasks",
                "description" : "Get all tasks from database.",
                "operationId" : "getAllTasks",
                "responses" : {
                    "200" : {
                        "description": "List of tasks",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Something went wrong"
                    }
                }
            },
            "post" : {
                "tags" : [
                    "Tasks"
                ],
                "summary" : "Create new task",
                "description" : "Create new task.",
                "operationId" : "createNewTask",
                "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "$ref": "#/components/examples/TaskPayload"
                        }
                      }
                    }
                },
                "responses" : {
                    "201" : {
                        "description": "Task created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/tasks/{id}" : {
            "get" : {
                "tags" : [
                    "Tasks"
                ],
                "summary" : "Get a task by id.",
                "description" : "Get a task by id.",
                "operationId" : "getTaskById",
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "Id of the task.",
                      "required": true
                    }
                ],
                "responses" : { 
                    "200" : {
                        "description" : "Task found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Something went wrong"
                    },
                    "404" : {
                        "description": "Task not found."
                    }
                }
            },
            "put" : {
                "tags" : [
                    "Tasks"
                ],
                "summary" : "Update task.",
                "description" : "Update task.",
                "operationId" : "updateTask",
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "Id of the task.",
                      "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "$ref": "#/components/examples/TaskPayload"
                        }
                      }
                    }
                },
                "responses" : { 
                    "204" : {
                        "description" : "Task updated"
                    },
                    "400" : {
                        "description": "Something went wrong"
                    },
                    "404" : {
                        "description": "Task not found."
                    }
                }
            },
            "delete" : {
                "tags" : [
                    "Tasks"
                ],
                "summary" : "Delete a task by id.",
                "description" : "Delete a task by id.",
                "operationId" : "deleteTask",
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "Id of the task.",
                      "required": true
                    }
                ],
                "responses" : { 
                    "204" : {
                        "description" : "Task deleted"
                    },
                    "400" : {
                        "description": "Something went wrong"
                    },
                    "404" : {
                        "description": "Task not found."
                    }
                }
            }
        },
        "/tasks/{id}/finish" : {
            "patch" : {
                "tags" : [
                    "Tasks"
                ],
                "summary" : "Finish a task by id.",
                "description" : "Finish a task by id.",
                "operationId" : "finishTask",
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "Id of the task.",
                      "required": true
                    }
                ],
                "responses" : { 
                    "204" : {
                        "description" : "Task finished."
                    },
                    "400" : {
                        "description": "Something went wrong"
                    },
                    "422" : {
                        "description": "Task is already finished."
                    }
                }
            }
        }
    },  	
    "components" : {
        "schemas" : {
            "User" : {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties" : {
                    "id" : {
                        "type": "integer",
                        "example" : 1  
                    }, 
                    "name" : {
                        "type": "string",
                        "example" : "Bryan Watson"  
                    }, 
                    "email" : {
                        "type": "string",
                        "example" : "bryan.watson@gmail.com"  
                    }, 
                    "password" : {
                        "type": "string",
                        "example" : "10203040" 
                    },
                    "created_at" : {
                        "type": "string",
                        "example" : "2020-10-10T10:11:12"
                    },
                    "updated_at" : {
                        "type": "string",
                        "example" : "2020-10-10T10:11:12"
                    }
                }
            },
            "Project" : {
                "type": "object",
                "required": [
                    "name",
                    "user_id"
                ],
                "properties" : {
                    "id" : {
                        "type": "integer",
                        "example" : 1  
                    }, 
                    "name" : {
                        "type": "string",
                        "example" : "New position in Europe"  
                    }, 
                    "user_id" : {
                        "type": "integer",
                        "example" : 1  
                    },
                    "created_at" : {
                        "type": "string",
                        "example" : "2020-10-10T10:11:12"
                    },
                    "updated_at" : {
                        "type": "string",
                        "example" : "2020-10-10T10:11:12"
                    }
                }
            },
            "Task" : {
                "type": "object",
                "required": [
                    "description",
                    "project_id"
                ],
                "properties" : { 
                    "id" : {
                        "type": "integer",
                        "example" : 1  
                    }, 
                    "description" : {
                        "type": "string",
                        "example" : "I must do the dishes"
                    },
                    "project_id" : {
                        "type": "integer",
                        "example" : 1
                    },
                    "finished_at" : {
                        "type": "string",
                        "example" : "2020-10-10T10:11:12"
                    },
                    "created_at" : {
                        "type": "string",
                        "example" : "2020-10-10T10:11:12"
                    },
                    "updated_at" : {
                        "type": "string",
                        "example" : "2020-10-10T10:11:12"
                    }
                }
            }
        },







        "examples" : {
            "TaskPayload" : {
                "type": "object",
                "required": [
                    "description",
                    "project_id"
                ],
                "properties" : { 
                    "description" : {
                        "type": "string",
                        "example" : "I must do the dishes"
                    },
                    "project_id" : {
                        "type": "integer",
                        "example" : 1
                    }
                }
            },
            "ProjectPayload" : {
                "type": "object",
                "required": [
                    "name",
                    "user_id"
                ],
                "properties" : {
                    "name" : {
                        "type": "string",
                        "example" : "New position in Europe"  
                    }, 
                    "user_id" : {
                        "type": "integer",
                        "example" : 1  
                    }
                }
            },
            "UserLogin" : {
                "properties" : { 
                    "email" : {
                        "type": "string",
                        "example" : "bryan.watson@gmail.com"
                    },
                    "password" : {
                        "type": "string",
                        "example" : "10203040"
                    } 
                }
            },
            "UserRegistration" : {
                "properties" : { 
                    "name" : {
                        "type": "string",
                        "example" : "Bryan Watson"
                    },
                    "email" : {
                        "type": "string",
                        "example" : "bryan.watson@gmail.com"
                    },
                    "password" : {
                        "type": "string",
                        "example" : "10203040"
                    } 
                }
            },

            "UserRegistrationOk" : {
                "properties" : { 
                    "user" : {
                        "type": "object",
                        "properties" : {
                            "id" : {
                                "type": "integer",
                                "example" : 1
                            },
                            "name" : {
                                "type": "string",
                                "example" : "Bryan Watson"
                            },
                            "email" : {
                                "type": "string",
                                "example" : "bryan.watson@gmail.com"
                            },
                            "created_at" : {
                                "type": "string",
                                "example" : "2020-02-22T12:44:33"
                            },
                            "updated_at" : {
                                "type": "string",
                                "example" : "2020-02-22T12:44:33"
                            }
                        }
                    },
                    "token" : {
                        "type": "string",
                        "example" : "hasudhaiushdaishdiuahsdihaishdiu3RDJ"
                    }
                }
            }
        }
    },
    "security" : [
       
    ],
    "tags" : [
        {
            "name" : "Users",
            "description" : "Users endpoints"
        },
        {
            "name" : "Projects",
            "description" : "Projects endpoints"
        },
        {
            "name" : "Tasks",
            "description" : "Tasks endpoints"
        },
        {
            "name" : "Health",
            "description" : "Health check."
        }
    ]
}